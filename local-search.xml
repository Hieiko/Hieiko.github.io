<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>祖父悖论</title>
    <link href="/2020/2WVM9C3.html"/>
    <url>/2020/2WVM9C3.html</url>
    
    <content type="html"><![CDATA[<h1 id="祖父悖论"><a href="#祖父悖论" class="headerlink" title="祖父悖论"></a>祖父悖论</h1><h2 id="祖父悖论的由来"><a href="#祖父悖论的由来" class="headerlink" title="祖父悖论的由来"></a>祖父悖论的由来</h2><p>外祖母悖论，即祖父悖论，是有关时间旅行的悖论。 由法国科幻小说作家赫内·巴赫札维勒（René Barjavel）在1943年小说《不小心的旅游者》（Le Voyageur Imprudent）中提出。</p><p>悖论情形如下：假如你回到过去，在自己父亲出生前把自己的祖父母杀死，但此举动会产生一矛盾的情况：你回到过去杀了你年轻的祖母，祖母死了就没有父亲，没有父亲也不会有你，那么是谁杀了祖母呢？ 或者看作：你的存在表示，祖母没有因你而死，那你何以杀死祖母？</p><p>而关于这个悖论有一下几种主流解释（博主只是看了一些纪录片，加以总结，如有错误欢迎指正！）<br><img src="https://gitee.com/hieiko/blog/raw/master/1585894963_20200403134306982_8408.png" srcset="/img/loading.gif" alt=""></p><h3 id="1、香蕉皮理论"><a href="#1、香蕉皮理论" class="headerlink" title="1、香蕉皮理论"></a>1、香蕉皮理论</h3><p>比方说当时间旅行者正要前去阻止父母相识时，不小心踩到一块香蕉皮摔伤住进医院，从而错过了时机。 这样的手法被一些物理学家戏称为 “香蕉皮机制” (Banana Peel Mechanism)。 在这种机制下，时间旅行者看似能够自由行事， 但每当其行为将要导致因果佯谬时，总会受到某些看似偶然的因素干扰， 致使行动失败。而在此悖论下，想通过时间旅行去杀死祖父母的过程中也会遇到类似的”香蕉皮事件“。而通过这种情况就能解释祖父悖论 即我们无法通过主观意识去改变历史。</p><h3 id="2、诺维科夫自洽原则"><a href="#2、诺维科夫自洽原则" class="headerlink" title="2、诺维科夫自洽原则"></a>2、诺维科夫自洽原则</h3><p>是由俄罗斯理论物理学家诺维科夫在1980年代提出的有关时间悖论的规则。此原则指出，人可以回到过去，但是不能因此改变历史的进程。其基本含义为，我们的世界是已经被改变过的最终结局。</p><p>诺维科夫认为因果矛盾的事件发生的概率为零，即祖父悖论从根本上就是不存在的。举个例子就是当你穿越回去杀死祖父母，可能你回到现实生活中，你会发现祖父母仍然在世，你杀错了人。或者，祖父母确实死掉了，但是你还活着，因为你是领养的，诸如此类。</p><h3 id="3、多重宇宙论"><a href="#3、多重宇宙论" class="headerlink" title="3、多重宇宙论"></a>3、多重宇宙论</h3><p>多重宇宙论（Multiverse或Meta-universe），或者叫多元宇宙论，指的是一种在物理学里尚未证实的假说。在我们的宇宙之外，很可能还存在着其他的宇宙，而这些宇宙是宇宙的可能状态的一种反应，这些宇宙可能其基本物理常数和我们所认知的宇宙相同，也可能不同。多重宇宙这个名词是由美国哲学家与心理学家威廉·詹姆士在1895年所提出的。而多重宇宙论就涉及到了平行宇宙分类中的一种通俗解释</p><h4 id="平行宇宙分类"><a href="#平行宇宙分类" class="headerlink" title="平行宇宙分类"></a>平行宇宙分类</h4><p>第一类：这类的宇宙和我们宇宙的物理常数相同，但是粒子的排列法不同，同时这类的宇宙也可视为存在于已知的宇宙（可观测宇宙）之外的地方；<br>第二类：这类的宇宙的物理定律大致和我们宇宙相同，但是基本物理常数不同<br>第三类（艾弗雷特的多世界诠释）：根据量子理论，一件事件发生之后可以产生不同的后果，而所有可能的后果都会形成一个宇宙，而此类宇宙可归属于第一类或第二类的平行宇宙，因为这类宇宙所遵守的基本物理定律依然和我们所认知的宇宙相同（上述“一颗球落入时光隧道，回到了过去撞上了自己因而使得自己无法进入时光隧道”诡论的平行宇宙解决办法属于此种）；<br>第四类（数学宇宙假说）：这类的宇宙最基础的物理定律不同于我们宇宙，而基本上到第四类为止，就可以解释所有可能存在（也就是可想像得到的）的宇宙，一般而言这些宇宙的物理定律可以用<a href="https://baike.baidu.com/item/M理论/215836" target="_blank" rel="noopener">M理论</a>构造出来。</p><p>而祖父悖论就能由其中的第三类平行宇宙中的多世界进行解释，当你回到过去准备杀死祖父母时，把这一时刻当成一个原点，而从此时开始，宇宙开始分裂，一个宇宙中你成功杀死了祖父母，从而在那个宇宙中的你并未出生，但并不影响你此时所处的这个宇宙。因为你穿越回去杀死的不是自身这个宇宙的祖父母。</p><h3 id="4、时序保护猜想"><a href="#4、时序保护猜想" class="headerlink" title="4、时序保护猜想"></a>4、时序保护猜想</h3><p>霍金在一个1992年的文件中说：<br>“似乎有一个时序保护机制，防止<a href="https://baike.baidu.com/item/闭合类时曲线" target="_blank" rel="noopener">闭合类时曲线</a>的生成，从历史学家手上保护了宇宙的安全”这个点子似乎是来源于科幻作品中的时间警察等机构。霍金认为自然定律不允许任何除亚微观尺度外的时间旅行。也就是从根本上否认了时间机器的可能性。</p><p>2009年6月28日，·霍金举行了一场派对，邀请时间旅行者参加。不过，霍金在派对结束后才寄出请柬。毫无疑问，这是对时间旅行者的一次终极考验。不幸的是，时间旅行者对霍金的派对不理不睬，没有一人参加。霍金将这场派对视为一项实验，没人赏脸则是一个证据，证明时间旅行不可能实现。</p><p>而关于时间旅行至今仍有许多猜想与疑问，人类的征途似乎一直都是星辰大海。<br>溜了溜了</p>]]></content>
    
    
    <categories>
      
      <category>杂文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows家庭版 安装docker教程</title>
    <link href="/2020/1RN8AQR.html"/>
    <url>/2020/1RN8AQR.html</url>
    
    <content type="html"><![CDATA[<h1 id="windows家庭版-安装docker教程"><a href="#windows家庭版-安装docker教程" class="headerlink" title="windows家庭版 安装docker教程"></a>windows家庭版 安装docker教程</h1><p>  Docker(小鲸鱼) 是一个开源的应用容器引擎，基于<a href="https://www.runoob.com/go/go-tutorial.html" target="_blank" rel="noopener">Go语言</a> 并遵从 Apache2.0 协议开源。</p><p>Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p><p>容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。</p><p>但是大多数windows10都是家庭版 并不支持 docker的安装 由于博主是学生党 没有经济能力购买专业版windows 于是乎走上了白嫖这一道路（博主绝对支持大家拥有版权意识） 下面给大家介绍如何在家庭版win10上安装docker。</p><h2 id="1、开启Hyper-V"><a href="#1、开启Hyper-V" class="headerlink" title="1、开启Hyper-V"></a>1、开启Hyper-V</h2><p>添加方法非常简单，把以下内容保存为.cmd文件，然后以管理员身份打开这个文件。提示重启时保存好文件重启吧，重启完成就能使用功能完整的Hyper-V了。</p><pre><code>pushd &quot;%~dp0&quot;dir /b %SystemRoot%\servicing\Packages\*Hyper-V*.mum &gt;hyper-v.txtfor /f %%i in (&#39;findstr /i . hyper-v.txt 2^&gt;nul&#39;) do dism /online /norestart /add-package:&quot;%SystemRoot%\servicing\Packages\%%i&quot;del hyper-v.txtDism /online /enable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL</code></pre><h2 id="2、伪装成专业版"><a href="#2、伪装成专业版" class="headerlink" title="2、伪装成专业版"></a>2、伪装成专业版</h2><p>由于Docker Desktop会在安装的时候检测系统版本，直接安装会显示安装失败。所以需要改下注册表绕过安装检测。打开注册表，定位到HKEY_LOCAL_MACHINE\software\Microsoft\Windows NT\CurrentVersion，点击current version，在右侧找到EditionId，右键点击EditionId 选择“修改“，在弹出的对话框中将第二项”数值数据“的内容改为Professional，然后点击确定 即可！（windows+r）输入regedit即可进入<br><img src="https://gitee.com/hieiko/blog/raw/master/1585323979_20200327234608600_10110.png" srcset="/img/loading.gif" alt=""></p><h2 id="3、安装docker"><a href="#3、安装docker" class="headerlink" title="3、安装docker"></a>3、安装docker</h2><p><a href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noopener">docker下载地址</a><br>安装时取消勾选window容器。如果仍然失败可以新建一个containers.bat文件以管理员身份运行 文件内容如下<br>文件博主存放在云盘<br><a href="https://pan.baidu.com/s/1MtTDkZunkRnsEHgwE7X9Fw" target="_blank" rel="noopener">https://pan.baidu.com/s/1MtTDkZunkRnsEHgwE7X9Fw</a><br>提取码：r991<br>下载下来可以直接运行</p><p><strong>注意仅当提示由于注册表追踪 或container之类的报错可以使用！！！</strong></p><h2 id="4、修改镜像源"><a href="#4、修改镜像源" class="headerlink" title="4、修改镜像源"></a>4、修改镜像源</h2><p>右击docker 选择settings 选择Docker Engine 进行修改<br>如下图所示<br><img src="https://gitee.com/hieiko/blog/raw/master/1585324960_20200328000223201_29176.png" srcset="/img/loading.gif" alt="F8UWD6ACQR$FQVZ((QU98C8"><br>之后可以参考<a href="https://www.nekilc.com/2020/22X88J.html" target="_blank" rel="noopener">Docker部署Mysql数据库</a>进行部署！<br>溜了溜了</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>Go语言</tag>
      
      <tag>数据库</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo搭建教程</title>
    <link href="/2020/3253SXB.html"/>
    <url>/2020/3253SXB.html</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo搭建教程"><a href="#Hexo搭建教程" class="headerlink" title="Hexo搭建教程"></a>Hexo搭建教程</h1><h2 id="1、下载git"><a href="#1、下载git" class="headerlink" title="1、下载git"></a>1、下载git</h2><p>git下载：<a href="https://git-scm.com/download/" target="_blank" rel="noopener">git下载地址</a><br>安装很简单 应该大家都会</p><h2 id="2、下载node-js"><a href="#2、下载node-js" class="headerlink" title="2、下载node.js"></a>2、下载node.js</h2><p>node.js下载：<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">node.js下载地址</a><br>node.js安装：<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">node.js安装</a></p><p>安装完前面两个之后 可以检测一下是否安装成功<br>在Dos（windows+r键 然后输入cmd即可进入）下输入以下命令</p><pre><code class="shell">git --versionnode -v</code></pre><p><img src="https://gitee.com/hieiko/blog/raw/master/1585160201_20200326021609022_31974.png" srcset="/img/loading.gif" alt=""><br>返回如下即可</p><h2 id="3、打开Gitbash，安装hexo"><a href="#3、打开Gitbash，安装hexo" class="headerlink" title="3、打开Gitbash，安装hexo"></a>3、打开Gitbash，安装hexo</h2><pre><code class="shell">$ npm install hexo-cli -g $ hexo init blog$ cd blog$ npm install$ hexo server</code></pre><h2 id="4、初始化本地博客"><a href="#4、初始化本地博客" class="headerlink" title="4、初始化本地博客"></a>4、初始化本地博客</h2><pre><code>$ hexo generate (hexo g) 生成静态文件$ hexo server (hexo s) 启动本地服务$ hexo deploy (hexo d) 提交到远程仓库$ hexo new page &quot;xx&quot;(hexo n page) 创建页面 $ hexo new &quot;xx&quot; (hexo n &quot;&quot;) 创建文章$ hexo d -g 生成静态并提交到远程仓库$ hexo s -g 生成静态文件并启动本地预览$ hexo clean 清除本地 public 文件</code></pre><p>此时只需要运行以下代码段即可</p><pre><code>$ hexo d -g 生成静态并提交到远程仓库$ hexo s -g 生成静态文件并启动本地预览</code></pre><p><img src="https://gitee.com/hieiko/blog/raw/master/1585160753_20200326022522019_15892.png" srcset="/img/loading.gif" alt=""><br>通过访问<a href="http://localhost:4000/" target="_blank" rel="noopener">本地博客</a>看到上图效果</p><h2 id="5、将博客部署到GitHub"><a href="#5、将博客部署到GitHub" class="headerlink" title="5、将博客部署到GitHub"></a>5、将博客部署到GitHub</h2><h3 id="注册GitHub账户"><a href="#注册GitHub账户" class="headerlink" title="注册GitHub账户"></a>注册GitHub账户</h3><p><a href="https://github.com/" target="_blank" rel="noopener">github注册</a></p><p>注册成功后，登录账号，点击右侧 “+” 号，然后点击 New repository 添加仓库，如图 ：注册成功后，登录账号，点击右侧 “+” 号，然后点击 New repository 添加仓库，如图 ：<br><img src="https://gitee.com/hieiko/blog/raw/master/1585161119_20200326023131503_17432.png" srcset="/img/loading.gif" alt=""></p><h3 id="GitHub-添加-SSH-key"><a href="#GitHub-添加-SSH-key" class="headerlink" title="GitHub 添加 SSH key"></a>GitHub 添加 SSH key</h3><p>检查本地是否有ssh key</p><pre><code>$ cd ~/.ssh$ ls</code></pre><p>没有的话自己生成一个</p><pre><code>$ ssh-keygen -t rsa </code></pre><p>然后输入用户名 和密码 然后输入以下命令获取ssh key的值</p><pre><code>$ clip &lt; ~/.ssh/id_rsa.pub&quot;</code></pre><p>然后将其添加到</p><p><img src="https://gitee.com/hieiko/blog/raw/master/1585162149_20200326024858631_7204.png" srcset="/img/loading.gif" alt=""></p><h3 id="将deploy配置信息进行修改"><a href="#将deploy配置信息进行修改" class="headerlink" title="将deploy配置信息进行修改"></a>将deploy配置信息进行修改</h3><p>找到下图路径中<br><img src="https://gitee.com/hieiko/blog/raw/master/1585163081_20200326030429046_1058.png" srcset="/img/loading.gif" alt=""><br>_config.yml文件修改以下代码段<br><img src="https://gitee.com/hieiko/blog/raw/master/1585163193_20200326030620882_15219.png" srcset="/img/loading.gif" alt=""><br>图中Hieiko为我的个人id 修改时要改成你自己的</p><h3 id="通过http-Hieiko-github-io-即可通过github远程仓库访问该博客"><a href="#通过http-Hieiko-github-io-即可通过github远程仓库访问该博客" class="headerlink" title="通过http://Hieiko.github.io 即可通过github远程仓库访问该博客"></a>通过<a href="http://Hieiko.github.io" target="_blank" rel="noopener">http://Hieiko.github.io</a> 即可通过github远程仓库访问该博客</h3><p>之后的一些细则 博主会后续继续更新！</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
